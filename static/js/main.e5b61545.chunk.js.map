{"version":3,"sources":["components/BotAvatar/BotAvatar.jsx","components/MyAvatar/MyAvatar.jsx","components/Options/Options.jsx","components/Quiz/Flashcard.jsx","components/Quiz/Quiz.jsx","components/commands/commands.jsx","components/plats/platforms.jsx","components/faqs/faqs.jsx","chatbot/config.js","chatbot/ActionProvider.js","chatbot/Messageparser.js","App.js","reportWebVitals.js","index.js"],"names":["BotAvatar","className","MyAvatar","Options","props","buttonsMarkup","text","handler","actionProvider","handleBasicQuiz","id","handleInvestQuiz","handleThirdQuiz","map","option","onClick","FlashCard","question","answer","incrementIndex","useState","showAnswer","setShowAnswer","useEffect","Quiz","console","log","questionIndex","setQuestionIndex","currentQuestion","questions","prev","Commands","GetNews","WhereToStart","GetMine","GetPlat","commands","Plat","GoToBinace","GoToCoinbase","GoToKraken","GoToWazirX","plats","Faqs","WhatIsCrypto","MoneyGo","faqs","config","botName","initialMessages","createChatBotMessage","widget","customComponents","header","style","backgroundColor","opacity","padding","borderRadius","fontSize","color","fontFamily","botAvatar","userAvatar","widgets","widgetName","widgetFunc","ActionProvider","setStateFunc","greet","message","addMessageToState","goodbye","CheckError","WhatCanDo","msg1","msg2","msg3","GetHelp","setState","prevState","messages","this","MessageParser","state","lowercase","toLowerCase","includes","App","messageParser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yWAUeA,EANG,WACd,OACI,qBAAKC,UAAU,oBAAf,SAAmC,qBAAKA,UAAU,aCI3CC,G,MANE,WACb,OACI,qBAAKD,UAAU,YAAf,SAA2B,qBAAKA,UAAU,gBC0BnCE,G,MA5BC,SAACC,GACf,IAkBMC,EAlBU,CACd,CACEC,KAAM,iBACNC,QAASH,EAAMI,eAAeC,gBAC9BC,GAAI,GAEN,CACEJ,KAAM,kBACNC,QAASH,EAAMI,eAAeG,iBAC9BD,GAAI,GAEN,CACEJ,KAAM,uBACNC,QAASH,EAAMI,eAAeI,gBAC9BF,GAAI,IAIsBG,KAAI,SAACC,GAAD,OAChC,wBAAwBC,QAASD,EAAOP,QAASN,UAAU,gBAA3D,SACGa,EAAOR,MADGQ,EAAOJ,OAKtB,OAAO,qBAAKT,UAAU,oBAAf,SAAoCI,M,OCF9BW,G,MAvBG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eACrC,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAIA,OAFAC,qBAAU,kBAAMD,GAAc,KAAQ,CAACL,IAGrC,qCACE,sBACEhB,UAAU,sBACVc,QAAS,kBAAMO,GAAeD,IAFhC,WAIIA,GAAcJ,EACfI,GAAcH,KAEhBG,GACC,wBAAQN,QAASI,EAAgBlB,UAAU,mBAA3C,gCCMOuB,EArBF,SAACpB,GACZqB,QAAQC,IAAItB,GACZ,MAAwCgB,mBAAS,GAAjD,mBAAKO,EAAL,KAAoBC,EAApB,KAIMC,EAAkBzB,EAAM0B,UAAUH,GAExC,OAAKE,EAKH,cAAC,EAAD,CACEZ,SAAUY,EAAgBZ,SAC1BC,OAAQW,EAAgBX,OACxBC,eAZmB,kBAAMS,GAAiB,SAACG,GAAD,OAAWA,EAAQ,QAKxD,qFCwBIC,G,MAjCE,SAAC5B,GAChB,IAuBMC,EAvBW,CACf,CACEC,KAAM,QACNC,QAASH,EAAMI,eAAeyB,QAC9BvB,GAAI,GAEN,CACEJ,KAAM,SACNC,QAASH,EAAMI,eAAe0B,aAC9BxB,GAAI,GAEN,CACEJ,KAAM,cACNC,QAASH,EAAMI,eAAe2B,QAC9BzB,GAAI,GAEN,CACIJ,KAAM,YACNC,QAASH,EAAMI,eAAe4B,QAC9B1B,GAAI,IAIqBG,KAAI,SAACwB,GAAD,OACjC,wBAA0BtB,QAASsB,EAAS9B,QAASN,UAAU,kBAA/D,SACGoC,EAAS/B,MADC+B,EAAS3B,OAKxB,OAAO,qBAAKT,UAAU,qBAAf,SAAqCI,MCG/BiC,G,MAjCF,SAAClC,GACZ,IAuBMC,EAvBQ,CACZ,CACEC,KAAM,UACNC,QAASH,EAAMI,eAAe+B,WAC9B7B,GAAI,GAEN,CACEJ,KAAM,WACNC,QAASH,EAAMI,eAAegC,aAC9B9B,GAAI,GAEN,CACEJ,KAAM,SACNC,QAASH,EAAMI,eAAeiC,WAC9B/B,GAAI,GAEN,CACIJ,KAAM,SACNC,QAASH,EAAMI,eAAekC,WAC9BhC,GAAI,IAIkBG,KAAI,SAAC8B,GAAD,OAC9B,wBAAuB5B,QAAS4B,EAAMpC,QAASN,UAAU,eAAzD,SACG0C,EAAMrC,MADIqC,EAAMjC,OAKrB,OAAO,qBAAKT,UAAU,kBAAf,SAAkCI,MCF5BuC,G,MA5BF,SAACxC,GACZ,IAkBMC,EAlBO,CACX,CACEC,KAAM,0BACNC,QAASH,EAAMI,eAAeqC,aAC9BnC,GAAI,GAEN,CACEJ,KAAM,2BACNC,QAASH,EAAMI,eAAesC,QAC9BpC,GAAI,GAEN,CACEJ,KAAM,oBACNC,QAASH,EAAMI,eAAe0B,aAC9BxB,GAAI,IAImBG,KAAI,SAACkC,GAAD,OAC7B,wBAAsBhC,QAASgC,EAAKxC,QAASN,UAAU,cAAvD,SACG8C,EAAKzC,MADKyC,EAAKrC,OAKpB,OAAO,qBAAKT,UAAU,iBAAf,SAAiCI,MC4EzB2C,EA/FF,CACbC,QAAS,YACTC,gBAAiB,CAACC,+BAAqB,kDACvCA,+BAAqB,mCACrBA,+BAAqB,2CACrB,CACEC,OAAQ,UAGVC,iBAAkB,CAChBC,OAAQ,kBAAM,qBAAKC,MAAO,CAAEC,gBAAiB,kBAAmBC,QAAS,MAAMC,QAAS,MAAOC,aAAc,OAASC,SAAS,SAASC,MAAM,QAAQC,WAAW,aAAnJ,oBACdC,UAAW,SAAC3D,GAAD,OAAW,cAAC,EAAD,eAAeA,KACrC4D,WAAY,SAAC5D,GAAD,OAAW,cAAC,EAAD,eAAcA,MAGrC6D,QAAS,CACP,CACEC,WAAY,WACZC,WAAY,SAAC/D,GAAD,OAAW,cAAC,EAAD,eAAcA,MAEvC,CACE8D,WAAY,OACZC,WAAY,SAAC/D,GAAD,OAAW,cAAC,EAAD,eAAUA,MAEnC,CACE8D,WAAY,UACZC,WAAY,SAAC/D,GAAD,OAAW,cAAC,EAAD,eAAaA,MAEtC,CACE8D,WAAY,OACZC,WAAY,SAAC/D,GAAD,OAAW,cAAC,EAAD,eAAUA,MAEnC,CACE8D,WAAY,YACZC,WAAY,SAAC/D,GAAD,OAAW,cAAC,EAAD,eAAUA,KACjCA,MAAO,CACL0B,UAAW,CACT,CACEb,SAAU,oBACVC,OACE,gBACFR,GAAI,GAEN,CACEO,SAAU,iBACVC,OACE,QACFR,GAAI,MAKZ,CACEwD,WAAY,aACZC,WAAY,SAAC/D,GAAD,OAAW,cAAC,EAAD,eAAUA,KACjCA,MAAO,CACL0B,UAAW,CACT,CACEb,SAAU,2BACVC,OACE,eACFR,GAAI,GAEN,CACEO,SAAU,0BACVC,OACE,YACFR,GAAI,MAKZ,CACEwD,WAAY,YACZC,WAAY,SAAC/D,GAAD,OAAW,cAAC,EAAD,eAAUA,KACjCA,MAAO,CACL0B,UAAW,CACT,CACEb,SAAU,sBACVC,OACE,uMACFR,GAAI,GAEN,CACEO,SAAU,mBACVC,OACE,sLACFR,GAAI,Q,eC2CH0D,EA3Ib,WAAYjB,EAAsBkB,GAAe,IAAD,gCAKhDC,MAAQ,WACN,IAAMC,EAAU,EAAKpB,qBAAqB,mBAC1C,EAAKqB,kBAAkBD,IAPuB,KAShDE,QAAU,WACR,IAAMF,EAAU,EAAKpB,qBAAqB,oCAC1C,EAAKqB,kBAAkBD,IAXuB,KAahDG,WAAa,WACX,IAAMH,EAAU,EAAKpB,qBAAqB,qCAC1C,EAAKqB,kBAAkBD,IAfuB,KAiBhDI,UAAY,WACV,IAAMC,EAAO,EAAKzB,qBAAqB,+CACjC0B,EAAO,EAAK1B,qBAAqB,yEACjC2B,EAAO,EAAK3B,qBAAqB,gDACvC,EAAKqB,kBAAkBI,GACvB,EAAKJ,kBAAkBK,GACvB,EAAKL,kBAAkBM,IAvBuB,KAyBhD7C,QAAU,WACR,IAAMsC,EAAU,EAAKpB,qBAAqB,yHAC1C,EAAKqB,kBAAkBD,IA3BuB,KA6BhDpC,QAAU,WACR,IAAMyC,EAAO,EAAKzB,qBAAqB,gIACjC0B,EAAO,EAAK1B,qBAAqB,gMACjC2B,EAAO,EAAK3B,qBAAqB,+HACvC,EAAKqB,kBAAkBI,GACvB,EAAKJ,kBAAkBK,GACvB,EAAKL,kBAAkBM,IAnCuB,KAsChDvC,WAAa,WACX,IAAMqC,EAAO,EAAKzB,qBAAqB,+BACjC0B,EAAO,EAAK1B,qBAAqB,iCACvC,EAAKqB,kBAAkBI,GACvB,EAAKJ,kBAAkBK,IA1CuB,KA4ChDrC,aAAe,WACb,IAAMoC,EAAO,EAAKzB,qBAAqB,gCACjC0B,EAAO,EAAK1B,qBAAqB,6BACvC,EAAKqB,kBAAkBI,GACvB,EAAKJ,kBAAkBK,IAhDuB,KAkDhDpC,WAAa,WACX,IAAMmC,EAAO,EAAKzB,qBAAqB,8BACjC0B,EAAO,EAAK1B,qBAAqB,kCACvC,EAAKqB,kBAAkBI,GACvB,EAAKJ,kBAAkBK,IAtDuB,KAwDhDnC,WAAa,WACX,IAAMkC,EAAO,EAAKzB,qBAAqB,8BACjC0B,EAAO,EAAK1B,qBAAqB,gCACvC,EAAKqB,kBAAkBI,GACvB,EAAKJ,kBAAkBK,IA5DuB,KA8DhDhC,aAAe,WACb,IAAM+B,EAAO,EAAKzB,qBAAqB,4FACjC0B,EAAO,EAAK1B,qBAAqB,+LACjC2B,EAAO,EAAK3B,qBAAqB,iIACvC,EAAKqB,kBAAkBI,GACvB,EAAKJ,kBAAkBK,GACvB,EAAKL,kBAAkBM,IApEuB,KAuEhDhC,QAAU,WACR,IAAMyB,EAAU,EAAKpB,qBAAqB,mMAC1C,EAAKqB,kBAAkBD,IAzEuB,KA2EhDrC,aAAe,WACb,IAAM0C,EAAO,EAAKzB,qBAAqB,4FACjC0B,EAAO,EAAK1B,qBAAqB,2FACjC2B,EAAO,EAAK3B,qBAAqB,2FACvC,EAAKqB,kBAAkBI,GACvB,EAAKJ,kBAAkBK,GACvB,EAAKL,kBAAkBM,IAjFuB,KAmFhD1C,QAAU,WACR,IAAMmC,EAAU,EAAKpB,qBACnB,uCACA,CACEC,OAAQ,SAGZ,EAAKoB,kBAAkBD,IA1FuB,KA4FhDQ,QAAU,WACR,IAAMR,EAAU,EAAKpB,qBACnB,iCACA,CACEC,OAAQ,aAGZ,EAAKoB,kBAAkBD,IAnGuB,KAsGhD9D,gBAAkB,WAChB,IAAM8D,EAAU,EAAKpB,qBACnB,+CACA,CACEC,OAAQ,cAIZ,EAAKoB,kBAAkBD,IA9GuB,KAgHhD5D,iBAAmB,WACjB,IAAM4D,EAAU,EAAKpB,qBACnB,qBACA,CACEC,OAAQ,eAIZ,EAAKoB,kBAAkBD,IAxHuB,KA0HhD3D,gBAAkB,WAChB,IAAM2D,EAAU,EAAKpB,qBACnB,uBACA,CACEC,OAAQ,cAGZ,EAAKoB,kBAAkBD,IAjIuB,KAmIhDC,kBAAoB,SAACD,GACnB,EAAKS,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,IAEZC,SAAS,GAAD,mBAAMD,EAAUC,UAAhB,CAA0BX,UArIpCY,KAAKhC,qBAAuBA,EAC5BgC,KAAKH,SAAWX,G,QCqCLe,E,WAvCb,WAAY5E,EAAgB6E,GAAQ,oBAClCF,KAAK3E,eAAiBA,EACtB2E,KAAKE,MAAQA,E,yCAGf,SAAMd,GACJ9C,QAAQC,IAAI6C,GACZ,IAAMe,EAAYf,EAAQgB,cAEtBD,EAAUE,SAAS,UAAYF,EAAUE,SAAS,OAASF,EAAUE,SAAS,OAChFL,KAAK3E,eAAe8D,QAEbgB,EAAUE,SAAS,WAAaF,EAAUE,SAAS,aAC1DL,KAAK3E,eAAeiE,UAEba,EAAUE,SAAS,oBAAsBF,EAAUE,SAAS,oBAAsBF,EAAUE,SAAS,UAC5GL,KAAK3E,eAAemE,YAEbW,EAAUE,SAAS,UAAYF,EAAUE,SAAS,QACzDL,KAAK3E,eAAeuE,UAEbO,EAAUE,SAAS,UAAYF,EAAUE,SAAS,QACzDL,KAAK3E,eAAeyB,UAEbqD,EAAUE,SAAS,oBAAsBF,EAAUE,SAAS,UACnEL,KAAK3E,eAAeqC,eAEbyC,EAAUE,SAAS,gBAAkBF,EAAUE,SAAS,cAC/DL,KAAK3E,eAAe2B,UAEbmD,EAAUE,SAAS,eAAiBF,EAAUE,SAAS,oBAAsBF,EAAUE,SAAS,YACvGL,KAAK3E,eAAe4B,UAGpB+C,KAAK3E,eAAekE,iB,WCZXe,MAdf,WACE,OACE,qBAAKxF,UAAU,MAAf,SACE,8BACE,cAAC,IAAD,CACE+C,OAAQA,EACRxC,eAAgB4D,EAChBsB,cAAeN,SCJVO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e5b61545.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './BotAvatar.css';\r\n\r\nconst BotAvatar = () => {\r\n    return (\r\n        <div className=\"crypto-bot-avatar\"><div className=\"shiba\"></div></div>\r\n    )\r\n}\r\n\r\nexport default BotAvatar;","import React from \"react\";\r\n\r\nimport './MyAvatar.css';\r\n\r\nconst MyAvatar = () => {\r\n    return (\r\n        <div className=\"My-avatar\"><div className=\"UserImg\"></div></div>\r\n    )\r\n}\r\n\r\nexport default MyAvatar;","import React from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Options = (props) => {\r\n  const options = [\r\n    {\r\n      text: \"where to start\",\r\n      handler: props.actionProvider.handleBasicQuiz,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: \"where to invest\", \r\n      handler: props.actionProvider.handleInvestQuiz, \r\n      id: 2 \r\n    },\r\n    { \r\n      text: \"Some Important Terms\", \r\n      handler: props.actionProvider.handleThirdQuiz, \r\n      id: 3 \r\n    },\r\n  ];\r\n\r\n  const buttonsMarkup = options.map((option) => (\r\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"options-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Options;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Quiz.css\";\r\n\r\nconst FlashCard = ({ question, answer, incrementIndex }) => {\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n\r\n  useEffect(() => setShowAnswer(false), [question]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"flashcard-container\"\r\n        onClick={() => setShowAnswer(!showAnswer)}\r\n      >\r\n        {!showAnswer && question}\r\n        {showAnswer && answer}\r\n      </div>\r\n      {showAnswer && (\r\n        <button onClick={incrementIndex} className=\"flashcard-button\">\r\n          Next question\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FlashCard;","import React, { useState } from \"react\";\r\n\r\nimport FlashCard from \"./Flashcard\";\r\n\r\nconst Quiz = (props) => {\r\n  console.log(props);\r\n  let [questionIndex, setQuestionIndex] = useState(0);\r\n\r\n  const incrementIndex = () => setQuestionIndex((prev) => (prev += 1));\r\n\r\n  const currentQuestion = props.questions[questionIndex];\r\n\r\n  if (!currentQuestion) {\r\n    return <p>If you have any other questions feel free to ask me</p>;\r\n  }\r\n\r\n  return (\r\n    <FlashCard\r\n      question={currentQuestion.question}\r\n      answer={currentQuestion.answer}\r\n      incrementIndex={incrementIndex}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Quiz;","import React from \"react\";\r\n\r\nimport \"./commands.css\";\r\n\r\nconst Commands = (props) => {\r\n  const commands = [\r\n    {\r\n      text: \"!news\",\r\n      handler: props.actionProvider.GetNews,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: \"!start\", \r\n      handler: props.actionProvider.WhereToStart, \r\n      id: 2 \r\n    },\r\n    { \r\n      text: \"!cryptoMine\", \r\n      handler: props.actionProvider.GetMine, \r\n      id: 3 \r\n    },\r\n    { \r\n        text: \"!platform\", \r\n        handler: props.actionProvider.GetPlat, \r\n        id: 4 \r\n    },\r\n  ];\r\n\r\n  const buttonsMarkup = commands.map((commands) => (\r\n    <button key={commands.id} onClick={commands.handler} className=\"commands-button\">\r\n      {commands.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"commands-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Commands;","import React from \"react\";\r\n\r\nimport \"./platforms.css\";\r\n\r\nconst Plat = (props) => {\r\n  const plats = [\r\n    {\r\n      text: \"Binance\",\r\n      handler: props.actionProvider.GoToBinace,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: \"Coinbase\", \r\n      handler: props.actionProvider.GoToCoinbase, \r\n      id: 2 \r\n    },\r\n    { \r\n      text: \"Kraken\", \r\n      handler: props.actionProvider.GoToKraken, \r\n      id: 3 \r\n    },\r\n    { \r\n        text: \"WazirX\", \r\n        handler: props.actionProvider.GoToWazirX, \r\n        id: 4 \r\n    },\r\n  ];\r\n\r\n  const buttonsMarkup = plats.map((plats) => (\r\n    <button key={plats.id} onClick={plats.handler} className=\"plats-button\">\r\n      {plats.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"plats-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Plat;","import React from \"react\";\r\n\r\nimport \"./faqs.css\";\r\n\r\nconst Faqs = (props) => {\r\n  const faqs = [\r\n    {\r\n      text: \"What is Cryptocurrency?\",\r\n      handler: props.actionProvider.WhatIsCrypto,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: \"where does the money go?\", \r\n      handler: props.actionProvider.MoneyGo, \r\n      id: 2 \r\n    },\r\n    { \r\n      text: \"Where do I start \", \r\n      handler: props.actionProvider.WhereToStart, \r\n      id: 3 \r\n    },\r\n  ];\r\n\r\n  const buttonsMarkup = faqs.map((faqs) => (\r\n    <button key={faqs.id} onClick={faqs.handler} className=\"faqs-button\">\r\n      {faqs.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"faqs-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Faqs;","import React from \"react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\nimport BotAvatar from \"../components/BotAvatar/BotAvatar\";\r\nimport MyAvatar from \"../components/MyAvatar/MyAvatar\";\r\nimport Options from \"../components/Options/Options\";\r\nimport Quiz from \"../components/Quiz/Quiz\";\r\nimport Commands from \"../components/commands/commands\";\r\nimport Plat from \"../components/plats/platforms\";\r\nimport Faqs from \"../components/faqs/faqs\";\r\n\r\nconst config = {\r\n  botName: \"CryptoBot\",\r\n  initialMessages: [createChatBotMessage(`I am Shiba - The CryptoBot How may i help you?`), \r\n  createChatBotMessage(`To get started try typing !help`),\r\n  createChatBotMessage(`Here are some frequently asked Questions`,\r\n  {\r\n    widget: \"Faqs\",\r\n  }),\r\n  ],\r\n  customComponents: {     \r\n    header: () => <div style={{ backgroundColor: 'rgb(104,86,231)', opacity: \"0.7\",padding: \"5px\", borderRadius: \"25px\" , fontSize:\"2.0rem\",color:\"white\",fontFamily:\"monospace\"}}>Shiba</div>,\r\n    botAvatar: (props) => <BotAvatar {...props} />,\r\n    userAvatar: (props) => <MyAvatar {...props} />,\r\n\r\n  },\r\n    widgets: [\r\n      {\r\n        widgetName: \"commands\",\r\n        widgetFunc: (props) => <Commands {...props} />,\r\n      },\r\n      {\r\n        widgetName: \"plat\",\r\n        widgetFunc: (props) => <Plat {...props} />,\r\n      },\r\n      {\r\n        widgetName: \"options\",\r\n        widgetFunc: (props) => <Options {...props} />,\r\n      },\r\n      {\r\n        widgetName: \"Faqs\",\r\n        widgetFunc: (props) => <Faqs {...props} />,\r\n      },\r\n      {\r\n        widgetName: \"BasicQuiz\",\r\n        widgetFunc: (props) => <Quiz {...props} />,\r\n        props: {\r\n          questions: [\r\n            {\r\n              question: \"how to buy Crypto\",\r\n              answer:\r\n                \"sell your mum\",\r\n              id: 1,\r\n            },\r\n            {\r\n              question: \"where to sell?\",\r\n              answer:\r\n                \"to me\",\r\n              id: 2,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        widgetName: \"InvestQuiz\",\r\n        widgetFunc: (props) => <Quiz {...props} />,\r\n        props: {\r\n          questions: [\r\n            {\r\n              question: \"how to invest in Crypto?\",\r\n              answer:\r\n                \"pta nhi bhai\",\r\n              id: 1,\r\n            },\r\n            {\r\n              question: \"how to get into Crypto?\",\r\n              answer:\r\n                \"dont know\",\r\n              id: 2,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        widgetName: \"ThirdQuiz\",\r\n        widgetFunc: (props) => <Quiz {...props} />,\r\n        props: {\r\n          questions: [\r\n            {\r\n              question: \"what is Blockchain?\",\r\n              answer:\r\n                \"Blockchain is a system that records the transaction information of cryptos.It is simply a digital ledger of transactions.\\nCheating, hacking, or changing the system is difficult if not impossible.\",\r\n              id: 1,\r\n            },\r\n            {\r\n              question: \"what is address?\",\r\n              answer:\r\n                \"An address in the crypto world refers to a specific network destination where crypto is sent. It is intended to provide a highly secure and unique place for holding crypto assets.\",\r\n              id: 2,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  export default config;","class ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n  }\r\n\r\n  greet = () => {\r\n    const message = this.createChatBotMessage(\"Hello hooman!!!\");\r\n    this.addMessageToState(message);\r\n  };\r\n  goodbye = () => {\r\n    const message = this.createChatBotMessage(\"Thank you for using our services\");\r\n    this.addMessageToState(message);\r\n  };\r\n  CheckError = () => {\r\n    const message = this.createChatBotMessage(\"Sorry I didn't quite catch that!!\");\r\n    this.addMessageToState(message);\r\n  };\r\n  WhatCanDo = () => {\r\n    const msg1 = this.createChatBotMessage(\"I can help you get information about Crypto\");\r\n    const msg2 = this.createChatBotMessage(\"These are some prompts that you can use to communicate with me easily\");\r\n    const msg3 = this.createChatBotMessage(\"!help (use this to get the list of commands)\");\r\n    this.addMessageToState(msg1);\r\n    this.addMessageToState(msg2);\r\n    this.addMessageToState(msg3);\r\n  };\r\n  GetNews = () => {\r\n    const message = this.createChatBotMessage(\"Bitcoin, BTC to USD, rose by 4.73% on Saturday. Reversing a 0.82% loss from Friday, Bitcoin ended the day at $49,426.\");\r\n    this.addMessageToState(message);\r\n  }\r\n  GetMine = () => {\r\n    const msg1 = this.createChatBotMessage(\"Crypto mining is the process of creating individual blocks added to the blockchain by solving complex mathematical problems.\");\r\n    const msg2 = this.createChatBotMessage(\"The purpose of mining is to verify cryptocurrency transactions and show proof of work, adding this information to a block on the blockchain, which acts as a ledger for mining transactions.\");\r\n    const msg3 = this.createChatBotMessage(\" This process uses a node run on a device with extremely high processing power called a mining rig or a Bitcoin mining app.\");\r\n    this.addMessageToState(msg1);\r\n    this.addMessageToState(msg2);\r\n    this.addMessageToState(msg3);\r\n\r\n  }\r\n  GoToBinace = () => {\r\n    const msg1 = this.createChatBotMessage(\"Here is the link to Binance\");\r\n    const msg2 = this.createChatBotMessage(\"https://accounts.binance.com \");\r\n    this.addMessageToState(msg1);\r\n    this.addMessageToState(msg2);\r\n  }\r\n  GoToCoinbase = () => {\r\n    const msg1 = this.createChatBotMessage(\"Here is the link to Coinbase\");\r\n    const msg2 = this.createChatBotMessage(\"https://www.coinbase.com \");\r\n    this.addMessageToState(msg1);\r\n    this.addMessageToState(msg2);\r\n  }\r\n  GoToKraken = () => {\r\n    const msg1 = this.createChatBotMessage(\"Here is the link to Kraken\");\r\n    const msg2 = this.createChatBotMessage(\"https://www.kraken.com/sign-up\");\r\n    this.addMessageToState(msg1);\r\n    this.addMessageToState(msg2);\r\n  }\r\n  GoToWazirX = () => {\r\n    const msg1 = this.createChatBotMessage(\"Here is the link to WazirX\");\r\n    const msg2 = this.createChatBotMessage(\"http://www.wazirx-signup.us/\");\r\n    this.addMessageToState(msg1);\r\n    this.addMessageToState(msg2);\r\n  }\r\n  WhatIsCrypto = () => {\r\n    const msg1 = this.createChatBotMessage(\"Cryptocurrency is a currency that has cryptography (encrypted code) in it to protect it.\");\r\n    const msg2 = this.createChatBotMessage(\"When a currency is only moved or circulated online, some additional protections are needed with technology the same way physical security is necessary with large amounts of physical cash.\");\r\n    const msg3 = this.createChatBotMessage(\"  These digital assets can be used in financial transactions since they are secured with the cryptography to make them safer.\");\r\n    this.addMessageToState(msg1);\r\n    this.addMessageToState(msg2);\r\n    this.addMessageToState(msg3);\r\n\r\n  }\r\n  MoneyGo = () => {\r\n    const message = this.createChatBotMessage(\"The money goes to the people who sell; some of them got their crypto for free through mining, airdrops, or if they were the ones to start the currency - all depending in each particular case.\");\r\n    this.addMessageToState(message);\r\n  }\r\n  WhereToStart = () => {\r\n    const msg1 = this.createChatBotMessage(\"Step 1 : Open an account on any platforms like Kraken or type !platform to get more info\");\r\n    const msg2 = this.createChatBotMessage(\"Step 2 : Buy your first whole or part BTC, LTC, ETH or other supported cryptocurrencies\");\r\n    const msg3 = this.createChatBotMessage(\"Step 3 : Move the longer term investment (non-trading) portion to a wallet you control \")\r\n    this.addMessageToState(msg1);\r\n    this.addMessageToState(msg2);\r\n    this.addMessageToState(msg3);\r\n  }\r\n  GetPlat = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Some platforms where you can invest \",\r\n      {\r\n        widget: \"plat\",\r\n      }  \r\n    );\r\n    this.addMessageToState(message);\r\n  }\r\n  GetHelp = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Some commands you can give me \",\r\n      {\r\n        widget: \"commands\",\r\n      }  \r\n    );\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  handleBasicQuiz = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"here are some steps which can help you start\",\r\n      {\r\n        widget: \"BasicQuiz\",\r\n      }\r\n    );\r\n\r\n    this.addMessageToState(message);\r\n  };\r\n  handleInvestQuiz = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"how to invest quiz\",\r\n      {\r\n        widget: \"InvestQuiz\",\r\n      }\r\n    );\r\n\r\n    this.addMessageToState(message);\r\n  };\r\n  handleThirdQuiz = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"some important terms\",\r\n      {\r\n        widget: \"ThirdQuiz\",\r\n      }\r\n    );\r\n    this.addMessageToState(message);\r\n  };\r\n  addMessageToState = (message) => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      messages: [...prevState.messages, message],\r\n    }));\r\n  };\r\n}\r\n\r\nexport default ActionProvider;","class MessageParser {\r\n  constructor(actionProvider, state) {\r\n    this.actionProvider = actionProvider;\r\n    this.state = state;\r\n  }\r\n\r\n  parse(message) {\r\n    console.log(message);\r\n    const lowercase = message.toLowerCase();\r\n\r\n    if (lowercase.includes(\"hello\") || lowercase.includes(\"hi\") || lowercase.includes(\"hey\")) {\r\n      this.actionProvider.greet();\r\n    }\r\n    else if (lowercase.includes(\"thanks\") || lowercase.includes(\"Thank You\")) {\r\n      this.actionProvider.goodbye();\r\n    }\r\n    else if (lowercase.includes(\"what can you do\") || lowercase.includes(\"what can you do\") || lowercase.includes(\"!funcs\")) {\r\n      this.actionProvider.WhatCanDo();\r\n    }\r\n    else if (lowercase.includes(\"!help\") || lowercase.includes(\"help\")) {\r\n      this.actionProvider.GetHelp();\r\n    }\r\n    else if (lowercase.includes(\"!news\") || lowercase.includes(\"news\")) {\r\n      this.actionProvider.GetNews();\r\n    }\r\n    else if (lowercase.includes(\"what is crypto?\") || lowercase.includes(\"crypto\")) {\r\n      this.actionProvider.WhatIsCrypto();\r\n    }\r\n    else if (lowercase.includes(\"!cryptoMine\") || lowercase.includes(\"Cryptomine\")) {\r\n      this.actionProvider.GetMine();\r\n    }\r\n    else if (lowercase.includes(\"!platforms\") || lowercase.includes(\"where to invest\") || lowercase.includes(\"platform\")) {\r\n      this.actionProvider.GetPlat();\r\n    }\r\n    else{\r\n      this.actionProvider.CheckError();\r\n    }\r\n  }\r\n}\r\n\r\nexport default MessageParser;","import React from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\n\nimport config from \"./chatbot/config\";\nimport ActionProvider from \"./chatbot/ActionProvider\";\nimport MessageParser from \"./chatbot/Messageparser\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <Chatbot\n          config={config}\n          actionProvider={ActionProvider}\n          messageParser={MessageParser}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}