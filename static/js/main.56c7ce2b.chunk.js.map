{"version":3,"sources":["components/BotAvatar/BotAvatar.jsx","components/MyAvatar/MyAvatar.jsx","components/Options/Options.jsx","components/commands/commands.jsx","components/plats/platforms.jsx","components/faqs/faqs.jsx","components/RealTimePrice/real.js","chatbot/config.js","chatbot/ActionProvider.js","chatbot/Messageparser.js","App.js","reportWebVitals.js","index.js"],"names":["BotAvatar","className","MyAvatar","Options","props","buttonsMarkup","text","handler","actionProvider","handleBasicQuiz","id","handleInvestQuiz","handleThirdQuiz","map","option","onClick","Commands","GetPrice","WhereToStart","GetPlat","commands","Plat","GoToBinace","GoToCoinbase","GoToKraken","GoToWazirX","plats","Faqs","MoneyGo","WhatIsCrypto","faqs","Real","getBtc","getEth","getBnb","getDoge","real","config","botName","initialMessages","createChatBotMessage","widget","customComponents","header","style","backgroundColor","opacity","padding","borderRadius","fontSize","color","fontFamily","botAvatar","userAvatar","widgets","widgetName","widgetFunc","ActionProvider","setStateFunc","greet","message","addMessageToState","goodbye","CheckError","WhatCanDo","msg1","msg2","msg3","GetMine","window","open","ws","WebSocket","addEventListener","send","JSON","stringify","event","streams","onmessage","data","parse","Array","isArray","btcInr","filter","obj","s","length","price","console","log","c","msg","close","ethInr","bnbInr","dogeInr","GetHelp","setState","prevState","messages","this","MessageParser","state","lowercase","toLowerCase","includes","App","messageParser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56c7ce2b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './BotAvatar.css';\r\n\r\nconst BotAvatar = () => {\r\n    return (\r\n        <div className=\"crypto-bot-avatar\"><div className=\"shiba\"></div></div>\r\n    )\r\n}\r\n\r\nexport default BotAvatar;","import React from \"react\";\r\n\r\nimport './MyAvatar.css';\r\n\r\nconst MyAvatar = () => {\r\n    return (\r\n        <div className=\"My-avatar\"><div className=\"UserImg\"></div></div>\r\n    )\r\n}\r\n\r\nexport default MyAvatar;","import React from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Options = (props) => {\r\n  const options = [\r\n    {\r\n      text: \"where to start\",\r\n      handler: props.actionProvider.handleBasicQuiz,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: \"where to invest\", \r\n      handler: props.actionProvider.handleInvestQuiz, \r\n      id: 2 \r\n    },\r\n    { \r\n      text: \"Some Important Terms\", \r\n      handler: props.actionProvider.handleThirdQuiz, \r\n      id: 3 \r\n    },\r\n  ];\r\n\r\n  const buttonsMarkup = options.map((option) => (\r\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"options-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Options;","import React from \"react\";\r\n\r\nimport \"./commands.css\";\r\n\r\nconst Commands = (props) => {\r\n  const commands = [\r\n    {\r\n      text: \"!price\",\r\n      handler: props.actionProvider.GetPrice,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: \"!start\", \r\n      handler: props.actionProvider.WhereToStart, \r\n      id: 2 \r\n    },\r\n    { \r\n      text: \"!price\", \r\n      handler: props.actionProvider.GetPrice, \r\n      id: 3 \r\n    },\r\n    { \r\n        text: \"!platform\", \r\n        handler: props.actionProvider.GetPlat, \r\n        id: 4 \r\n    },\r\n  ];\r\n\r\n  const buttonsMarkup = commands.map((commands) => (\r\n    <button key={commands.id} onClick={commands.handler} className=\"commands-button\">\r\n      {commands.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"commands-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Commands;","import React from \"react\";\r\n\r\nimport \"./platforms.css\";\r\n\r\nconst Plat = (props) => {\r\n  const plats = [\r\n    {\r\n      text: \"Binance\",\r\n      handler: props.actionProvider.GoToBinace,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: \"Coinbase\", \r\n      handler: props.actionProvider.GoToCoinbase, \r\n      id: 2 \r\n    },\r\n    { \r\n      text: \"Kraken\", \r\n      handler: props.actionProvider.GoToKraken, \r\n      id: 3 \r\n    },\r\n    { \r\n        text: \"WazirX\", \r\n        handler: props.actionProvider.GoToWazirX, \r\n        id: 4 \r\n    },\r\n  ];\r\n\r\n  const buttonsMarkup = plats.map((plats) => (\r\n    <button key={plats.id} onClick={plats.handler} className=\"plats-button\">\r\n      {plats.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"plats-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Plat;","import React from \"react\";\r\n\r\nimport \"./faqs.css\";\r\n\r\nconst Faqs = (props) => {\r\n  const faqs = [\r\n    {\r\n      text: \"How do I start?\", \r\n      handler: props.actionProvider.WhereToStart, \r\n      id: 1\r\n      \r\n    },\r\n    { \r\n      text: \"where does the money go?\", \r\n      handler: props.actionProvider.MoneyGo, \r\n      id: 2 \r\n    },\r\n    { \r\n      text: \"What is Cryptocurrency?\",\r\n      handler: props.actionProvider.WhatIsCrypto,\r\n      id: 3,\r\n    },\r\n  ];\r\n\r\n  const buttonsMarkup = faqs.map((faqs) => (\r\n    <button key={faqs.id} onClick={faqs.handler} className=\"faqs-button\">\r\n      {faqs.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"faqs-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Faqs;","import React from \"react\";\r\n\r\nimport \"./real.css\";\r\n\r\nconst Real = (props) => {\r\n  const real = [\r\n    {\r\n      text: \"Bitcoin\",\r\n      handler: props.actionProvider.getBtc,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: \"Ethereum\", \r\n      handler: props.actionProvider.getEth, \r\n      id: 2 \r\n    },\r\n    { \r\n      text: \"BNB Coin\", \r\n      handler: props.actionProvider.getBnb, \r\n      id: 3 \r\n    },\r\n    { \r\n        text: \"DogeCoin\", \r\n        handler: props.actionProvider.getDoge, \r\n        id: 4 \r\n    },\r\n  ];\r\n\r\n  const buttonsMarkup = real.map((real) => (\r\n    <button key={real.id} onClick={real.handler} className=\"real-button\">\r\n      {real.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"real-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Real;","import React from \"react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\nimport BotAvatar from \"../components/BotAvatar/BotAvatar\";\r\nimport MyAvatar from \"../components/MyAvatar/MyAvatar\";\r\nimport Options from \"../components/Options/Options\";\r\nimport Commands from \"../components/commands/commands\";\r\nimport Plat from \"../components/plats/platforms\";\r\nimport Faqs from \"../components/faqs/faqs\";\r\nimport Real from \"../components/RealTimePrice/real\";\r\n\r\n\r\nconst config = {\r\n  botName: \"CryptoBot\",\r\n  initialMessages: [createChatBotMessage(`I am Shiba - The CryptoBot How may i help you?`),\r\n  createChatBotMessage(`To get started try typing !help`),\r\n  createChatBotMessage(`Here are some frequently asked Questions`,\r\n    {\r\n      widget: \"Faqs\",\r\n    }),\r\n  ],\r\n  customComponents: {\r\n    header: () => <div style={{ backgroundColor: 'rgb(104,86,231)', opacity: \"0.7\", padding: \"5px\", borderRadius: \"25px\", fontSize: \"2.0rem\", color: \"white\", fontFamily: \"monospace\" }}>Shiba</div>,\r\n    botAvatar: (props) => <BotAvatar {...props} />,\r\n    userAvatar: (props) => <MyAvatar {...props} />,\r\n\r\n  },\r\n  widgets: [\r\n    {\r\n      widgetName: \"commands\",\r\n      widgetFunc: (props) => <Commands {...props} />,\r\n    },\r\n    {\r\n      widgetName: \"real\",\r\n      widgetFunc: (props) => <Real {...props} />,\r\n    },\r\n    {\r\n      widgetName: \"plat\",\r\n      widgetFunc: (props) => <Plat {...props} />,\r\n    },\r\n    {\r\n      widgetName: \"options\",\r\n      widgetFunc: (props) => <Options {...props} />,\r\n    },\r\n    {\r\n      widgetName: \"Faqs\",\r\n      widgetFunc: (props) => <Faqs {...props} />,\r\n    },\r\n  ],\r\n};\r\n\r\nexport default config;","class ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n  }\r\n\r\n  greet = () => {\r\n    const message = this.createChatBotMessage(\"Hello hooman!!!\");\r\n    this.addMessageToState(message);\r\n  };\r\n  goodbye = () => {\r\n    const message = this.createChatBotMessage(\"Thank you for using our services\");\r\n    this.addMessageToState(message);\r\n  };\r\n  CheckError = () => {\r\n    const message = this.createChatBotMessage(\"Sorry I didn't quite catch that!!\");\r\n    this.addMessageToState(message);\r\n  };\r\n  WhatCanDo = () => {\r\n    const msg1 = this.createChatBotMessage(\"I can help you get information about Crypto\");\r\n    const msg2 = this.createChatBotMessage(\"These are some prompts that you can use to communicate with me easily\");\r\n    const msg3 = this.createChatBotMessage(\"!help (use this to get the list of commands)\");\r\n    this.addMessageToState(msg1);\r\n    this.addMessageToState(msg2);\r\n    this.addMessageToState(msg3);\r\n  };\r\n  GetMine = () => {\r\n    const msg1 = this.createChatBotMessage(\"Crypto mining is the process of creating individual blocks added to the blockchain by solving complex mathematical problems.\");\r\n    const msg2 = this.createChatBotMessage(\"The purpose of mining is to verify cryptocurrency transactions and show proof of work, adding this information to a block on the blockchain, which acts as a ledger for mining transactions.\");\r\n    const msg3 = this.createChatBotMessage(\" This process uses a node run on a device with extremely high processing power called a mining rig or a Bitcoin mining app.\");\r\n    this.addMessageToState(msg1);\r\n    this.addMessageToState(msg2);\r\n    this.addMessageToState(msg3);\r\n    \r\n  }\r\n  GoToBinace = () => {\r\n    window.open(\"https://accounts.binance.com\");\r\n  }\r\n  GoToCoinbase = () => {\r\n    window.open(\"https://www.coinbase.com\");\r\n  }\r\n  GoToKraken = () => {\r\n    window.open(\"https://www.kraken.com/sign-up\");\r\n  }\r\n  GoToWazirX = () => {\r\n    window.open(\"http://www.wazirx-signup.us/\");\r\n  }\r\n  WhatIsCrypto = () => {\r\n    const msg1 = this.createChatBotMessage(\"Cryptocurrency is a currency that has cryptography (encrypted code) in it to protect it.\");\r\n    const msg3 = this.createChatBotMessage(\"  These digital assets can be used in financial transactions since they are secured with the cryptography to make them safer.\");\r\n    this.addMessageToState(msg1);\r\n    this.addMessageToState(msg3);\r\n    \r\n  }\r\n  MoneyGo = () => {\r\n    const message = this.createChatBotMessage(\"The money goes to the people who sell; some of them got their crypto for free through mining, airdrops, or if they were the ones to start the currency - all depending in each particular case.\");\r\n    this.addMessageToState(message);\r\n  }\r\n  WhereToStart = () => {\r\n    const msg1 = this.createChatBotMessage(\"Step 1 : Open an account on any platforms like Kraken or type platforms to know more\");\r\n    const msg2 = this.createChatBotMessage(\"Step 2 : Buy your first whole or part BTC, LTC, ETH or other supported cryptocurrencies To know the real time price look below\",\r\n    {\r\n      widget: \"real\",\r\n    },\r\n    );\r\n    const msg3 = this.createChatBotMessage(\"Step 3 : You are ready to start trading\")\r\n    this.addMessageToState(msg1);\r\n    this.addMessageToState(msg2);\r\n    this.addMessageToState(msg3);\r\n  }\r\n  getBtc = () => {\r\n    const message = this.createChatBotMessage(\"Current Price of Bitcoin is :\");\r\n    this.addMessageToState(message);\r\n    const base = 'wss://stream.wazirx.com/stream';\r\n    const ws = new WebSocket(base);\r\n    ws.addEventListener('open' , () => {\r\n      ws.send(JSON.stringify({ event: 'subscribe', streams : [\"!ticker@arr\"]}));\r\n    });\r\n    ws.onmessage = (event) => {\r\n      const res = JSON.parse(event.data)\r\n      const { data } = res;\r\n      if (!Array.isArray(data)) return;\r\n      const btcInr = data.filter((obj) => {\r\n        return obj.s === \"btcinr\"\r\n      })\r\n      if (btcInr.length === 0) return;\r\n      const [price] = btcInr;\r\n      console.log(price.c);\r\n      const msg = this.createChatBotMessage(\"₹\" + price.c);\r\n      this.addMessageToState(msg);\r\n      ws.close();\r\n      return;\r\n    } \r\n  }\r\n  getEth = () => {\r\n    const message = this.createChatBotMessage(\"Current Price of Ethereum is :\");\r\n    this.addMessageToState(message);\r\n    const base = 'wss://stream.wazirx.com/stream';\r\n    const ws = new WebSocket(base);\r\n    ws.addEventListener('open' , () => {\r\n      ws.send(JSON.stringify({ event: 'subscribe', streams : [\"!ticker@arr\"]}));\r\n    });\r\n    ws.onmessage = (event) => {\r\n      const res = JSON.parse(event.data)\r\n      const { data } = res;\r\n      if (!Array.isArray(data)) return;\r\n      const ethInr = data.filter((obj) => {\r\n        return obj.s === \"ethinr\"\r\n      })\r\n      if (ethInr.length === 0) return;\r\n      const [price] = ethInr;\r\n      console.log(price.c);\r\n      const msg = this.createChatBotMessage(\"₹\" + price.c);\r\n      this.addMessageToState(msg);\r\n      ws.close();\r\n      return;\r\n    }\r\n\r\n  }\r\n  getBnb = () => {\r\n    const message = this.createChatBotMessage(\"Current Price of BNB Coin is :\");\r\n    this.addMessageToState(message);\r\n    const base = 'wss://stream.wazirx.com/stream';\r\n    const ws = new WebSocket(base);\r\n    ws.addEventListener('open' , () => {\r\n      ws.send(JSON.stringify({ event: 'subscribe', streams : [\"!ticker@arr\"]}));\r\n    });\r\n    ws.onmessage = (event) => {\r\n      const res = JSON.parse(event.data)\r\n      const { data } = res;\r\n      if (!Array.isArray(data)) return;\r\n      const bnbInr = data.filter((obj) => {\r\n        return obj.s === \"bnbinr\"\r\n      })\r\n      if (bnbInr.length === 0) return;\r\n      const [price] = bnbInr;\r\n      console.log(price.c);\r\n      const msg = this.createChatBotMessage(\"₹\" + price.c);\r\n      this.addMessageToState(msg);\r\n      ws.close();\r\n      return;\r\n    } \r\n  }\r\n  getDoge = () => {\r\n    const message = this.createChatBotMessage(\"Current Price of Doge Coin is :\");\r\n    this.addMessageToState(message);\r\n    const base = 'wss://stream.wazirx.com/stream';\r\n    const ws = new WebSocket(base);\r\n    ws.addEventListener('open' , () => {\r\n      ws.send(JSON.stringify({ event: 'subscribe', streams : [\"!ticker@arr\"]}));\r\n    });\r\n    ws.onmessage = (event) => {\r\n      const res = JSON.parse(event.data)\r\n      const { data } = res;\r\n      if (!Array.isArray(data)) return;\r\n      const dogeInr = data.filter((obj) => {\r\n        return obj.s === \"dogeinr\"\r\n      })\r\n      if (dogeInr.length === 0) return;\r\n      const [price] = dogeInr;\r\n      console.log(price.c);\r\n      const msg = this.createChatBotMessage(\"₹\" + price.c);\r\n      this.addMessageToState(msg);\r\n      ws.close();\r\n      return;\r\n    } \r\n  }\r\n  GetPrice = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Choose the coin for which you want to know the price \",\r\n      {\r\n        widget: \"real\",\r\n      }  \r\n    );\r\n    this.addMessageToState(message);\r\n  }\r\n  GetPlat = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Some platforms where you can invest \",\r\n      {\r\n        widget: \"plat\",\r\n      }  \r\n    );\r\n    this.addMessageToState(message);\r\n  }\r\n  GetHelp = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Some commands you can give me \",\r\n      {\r\n        widget: \"commands\",\r\n      }  \r\n    );\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  addMessageToState = (message) => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      messages: [...prevState.messages, message],\r\n    }));\r\n  };\r\n}\r\n\r\nexport default ActionProvider;","class MessageParser {\r\n  constructor(actionProvider, state) {\r\n    this.actionProvider = actionProvider;\r\n    this.state = state;\r\n  }\r\n\r\n  parse(message) {\r\n    console.log(message);\r\n    const lowercase = message.toLowerCase();\r\n\r\n    if (lowercase.includes(\"hello\") || lowercase.includes(\"hi\") || lowercase.includes(\"hey\")) {\r\n      this.actionProvider.greet();\r\n    }\r\n    else if (lowercase.includes(\"thanks\") || lowercase.includes(\"Thank You\")) {\r\n      this.actionProvider.goodbye();\r\n    }\r\n    else if (lowercase.includes(\"what can you do\") || lowercase.includes(\"what can you do\") || lowercase.includes(\"!funcs\")) {\r\n      this.actionProvider.WhatCanDo();\r\n    }\r\n    else if (lowercase.includes(\"!help\") || lowercase.includes(\"help\")) {\r\n      this.actionProvider.GetHelp();\r\n    }\r\n    else if (lowercase.includes(\"!price\") || lowercase.includes(\"price\")) {\r\n      this.actionProvider.GetPrice();\r\n    }\r\n    else if (lowercase.includes(\"what is crypto?\") || lowercase.includes(\"crypto\")) {\r\n      this.actionProvider.WhatIsCrypto();\r\n    }\r\n    else if (lowercase.includes(\"!cryptoMine\") || lowercase.includes(\"Cryptomine\")) {\r\n      this.actionProvider.GetMine();\r\n    }\r\n    else if (lowercase.includes(\"!platforms\") || lowercase.includes(\"where to invest\") || lowercase.includes(\"platform\")) {\r\n      this.actionProvider.GetPlat();\r\n    }\r\n    else{\r\n      this.actionProvider.CheckError();\r\n    }\r\n  }\r\n}\r\n\r\nexport default MessageParser;","import React from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\n\nimport config from \"./chatbot/config\";\nimport ActionProvider from \"./chatbot/ActionProvider\";\nimport MessageParser from \"./chatbot/Messageparser\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <Chatbot\n          config={config}\n          actionProvider={ActionProvider}\n          messageParser={MessageParser}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}